Parameters:
  CollectionArn:
    Type: String
    Default: "arn:aws:aoss:us-west-2:713881807885:collection/6oqthc41ex2ke1kg3myg"

Resources:
  VectorIndex:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt LambdaFunction.Arn
      CollectionArn: !Ref CollectionArn
      IndexName: my-vector-index
      EmbeddingModel: amazon.titan-embed-text-v1

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: eval-713881807885-us-west-2
        S3Key: cloudformation_custom_resource/cr.zip
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          OPENSEARCH_HOSTNAME: "ludmc7t0wrhqul71dkfe"
          OPENSEARCH_INDEX_NAME: my-vector-index
          EMBEDDING_MODEL: amazon.titan-embed-text-v1

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: OpenSearchServerlessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'opensearchserverless:CreateIndex'
                  - 'opensearchserverless:DeleteIndex'
                Resource: !Sub 'arn:aws:opensearchserverless:${AWS::Region}:${AWS::AccountId}:collection/ludmc7t0wrhqul71dkfe/*'
